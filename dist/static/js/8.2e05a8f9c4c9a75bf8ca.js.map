{"version":3,"sources":["webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///src/views/home/index.vue","webpack:///./src/views/home/index.vue?a0bc","webpack:///./src/views/home/index.vue"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","snapIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","innerWidth","swiper_esm_bundle_Browser","isIE","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","hideOnClick","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","home","setBanner","setComment","setTeacher","views_home","_vm","_h","$createElement","_c","_self","_m","_v","staticClass","gutter","_l","item","span","staticStyle","padding","id","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/8.2e05a8f9c4c9a75bf8ca.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.0.7\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: June 14, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.3.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 31, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (swiper.isHorizontal()) {\n        slideSize = slide[0].getBoundingClientRect().width\n          + parseFloat(slideStyles.getPropertyValue('margin-left'))\n          + parseFloat(slideStyles.getPropertyValue('margin-right'));\n      } else {\n        slideSize = slide[0].getBoundingClientRect().height\n          + parseFloat(slideStyles.getPropertyValue('margin-top'))\n          + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\n    <div>\n        <div class=\"banner\">\n            <!-- Slider main container -->\n            <div id=\"banner\" class=\"swiper-container\" style=\"height:460px\">\n                <div class=\"swiper-wrapper\">\n                    <div class=\"swiper-slide\">\n                        <img class=\"img-r\" src=\"http://news.chaozhiedu.com/img/banner.png\">\n                    </div>\n                    <div class=\"swiper-slide\">\n                        <img class=\"img-r\" src=\"http://news.chaozhiedu.com/img/banner1.jpg\">\n                    </div>\n                    <div class=\"swiper-slide\">\n                        <img class=\"img-r\" src=\"http://news.chaozhiedu.com/img/banner-xl.png\">\n                    </div>\n                </div>\n                <!-- Add Pagination -->\n                <div class=\"swiper-pagination\"></div>\n            </div>\n            <!-- <el-carousel height=\"460px\">\n                <el-carousel-item>\n                    <img class=\"img-r\" src=\"http://news.chaozhiedu.com/img/banner.png\">\n                </el-carousel-item>\n                <el-carousel-item>\n                    <img class=\"img-r\" src=\"http://news.chaozhiedu.com/img/banner1.jpg\">\n                </el-carousel-item>\n                <el-carousel-item>\n                    <img class=\"img-r\" src=\"http://news.chaozhiedu.com/img/banner-xl.png\">\n                </el-carousel-item>\n            </el-carousel> -->\n        </div>\n        <div class=\"floor floor-1\">\n            <div class=\"container\">\n                <div class=\"clearfix floor-hd mb-20\">\n                    <div class=\"pull-left\">\n                        <span class='t-20 t-orange'>畅销好课</span>\n                    </div>\n                    <div class=\"pull-right\">\n                        <a class=\"t-gray\">MORE</a>\n                    </div>\n                </div>\n                <el-row :gutter=\"15\">\n                    <el-col :span=\"6\" v-for=\"item in 4\" :key=\"item\">\n                        <a class=\"card shadow\">\n                            <img class=\"card-media\" src=\"https://img3.mukewang.com/szimg/5b165c2b0001e24a05400300.jpg\">\n                            <div class=\"card-body\">\n                                <div class=\"t-ellipsis\">注册消防工程师VIP火箭班注册消防工程师VIP火箭班</div>\n                                <div>2932</div>\n                                <div class=\"t-22 t-right t-orange\">￥6980</div>\n                            </div>\n                        </a>\n                    </el-col>\n                </el-row>\n            </div>\n        </div>\n        <div class=\"floor floor-2\">\n            <div class=\"container\">\n                <div class=\"clearfix floor-hd mb-20\">\n                    <div class=\"pull-left\">\n                        <span class='t-20 t-purple'>学历教育</span>\n                    </div>\n                    <div class=\"pull-right\">\n                        <a class=\"t-gray\">MORE</a>\n                    </div>\n                </div>\n                <el-row :gutter=\"10\">\n                    <el-col :span=\"5\">\n                        <div class=\"floor-2-slide\">\n                            <a>\n                                <div class=\"mb-25\">\n                                    <img src=\"https://img3.mukewang.com/583e9afa000166c410240770-100-100.jpg\">\n                                </div>\n                                <div class=\"mb-30\">\n                                    <div class=\"t-20 mb-10\">\n                                        自考-学前教育专科\n                                    </div>\n                                    <div class=\"t-light\">\n                                        经典取证班\n                                    </div>\n                                </div>\n                                <div>\n                                    <span class=\"t-30\">￥4980</span>\n                                </div>\n                            </a>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"19\">\n                        <el-row :gutter=\"10\">\n                            <el-col :span=\"6\" v-for=\"item in 8\" :key=\"item\">\n                                <a class=\"card mb-20 shadow\">\n                                    <img class=\"card-media\" src=\"https://img3.mukewang.com/szimg/5b165c2b0001e24a05400300.jpg\">\n                                    <div class=\"card-body mb-10\">\n                                        <div class=\"t-ellipsis mb-10\">注册消防工程师VIP火箭班注册消防工程师VIP火箭班</div>\n                                        <div class=\"clearfix\">\n                                            <div class=\"pull-left\">2932</div>\n                                            <div class=\"pull-right t-orange\">￥6980</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"clearfix\"></div>\n                                </a>\n                            </el-col>\n                        </el-row>\n                    </el-col>\n                </el-row>\n            </div>\n        </div>\n        <div class=\"floor floor-3\">\n            <div class=\"container\">\n                <div class=\"clearfix floor-hd mb-20\">\n                    <span class='t-20 t-green'>精彩评价</span>\n                </div>\n                <div style=\"padding:0 100px;\">\n                    <!-- Swiper -->\n                    <div id=\"comment\" class=\"swiper-container\">\n                        <div class=\"swiper-wrapper\">\n                            <div class=\"swiper-slide\" v-for=\"item in 20\" :key=\"'comment'+item\">\n                                <div class=\"comment\">\n                                    <div class=\"comment-contant mb-20\">\n                                        <div class=\"comment-contant-text\">\n                                            <span>\n                                                非常棒，课程非常适合新手使用，初级后再买高级的。\n                                                非常棒，课程非常适合新手使用，初级后再买高级的。\n                                                非常棒，课程非常适合新手使用，初级后再买高级的。\n                                                非常棒，课程非常适合新手使用，初级后再买高级的。\n                                                非常棒，课程非常适合新手使用，初级后再买高级的。\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"t-center\">\n                                        <div class=\"comment-avatar mb-10\"><img src=\"https://img3.mukewang.com/583e9afa000166c410240770-100-100.jpg\"></div>\n                                        <div>学员邪我</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"floor floor-4\">\n            <div class=\"container\">\n                <div class=\"t-center floor-hd mb-20\">\n                    <span class=\"floor-title-line\"></span>\n                    <span class=\"t-24 t-black\">精 英 名 师</span>\n                    <span class=\"floor-title-line\"></span>\n                </div>\n                <div>\n                    <!-- Swiper -->\n                    <div id=\"teacher\" class=\"swiper-container\">\n                        <div class=\"swiper-wrapper\">\n                            <div class=\"swiper-slide\" v-for=\"item in 20\" :key=\"'comment'+item\">\n                                <div class=\"card\">\n                                    <img class=\"card-media\" src=\"https://img.mukewang.com/5a5d55de00015cba05120512.jpg\">\n                                    <div class=\"card-body\">\n                                        <div class=\"t-ellipsis t-center\">欧雅老师</div>\n                                        <div class=\"t-12 t-gray\">硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"floor floor-5\">\n            <div class=\"container\">\n                <div class=\"clearfix floor-hd mb-20\">\n                   <span class='t-20 t-blue'>超职资讯</span>\n                </div>\n                <el-row :gutter=\"30\">\n                    <el-col :span=\"8\">\n                        <div class=\"card shadow card-padd\">\n                            <div class=\"card-title\">\n                                <span class=\"t-18\">资讯标题一</span>\n                            </div>\n                            <div class=\"card-media\">\n                                <img src=\"https://img3.mukewang.com/szimg/5b165c2b0001e24a05400300.jpg\">\n                            </div>\n                            <div class=\"card-body\">\n                                <div class=\"t-12 t-gray\">硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。</div>\n                            </div>\n                            <div class=\"card-more\"></div>\n                        </div>\n                    </el-col>\n                    <el-col :span=\"16\">\n                        <div class=\"news\">\n                            <div class=\"news-list\">\n                                <a class=\"news-item\" v-for=\"item in 4\" :key=\"'news'+item\">\n                                    <div class=\"news-title\">资讯标题一</div>\n                                    <div class=\"news-desc\">您好，这里是全国心理咨询师报名审核平台，2018年考试变革新政策已颁布，输入您的“学历+手机号码”，系统会自动审核并发送改革后的报考条件、报考时间和相关政策。</div>\n                                    <div class=\"news-more\">MORE</div>\n                                </a>\n                            </div>\n                        </div>\n                    </el-col>\n                </el-row>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Swiper from \"swiper\";\nconst swipers = {\n  banner: {},\n  comment: {},\n  teacher: {}\n};\nexport default {\n  data() {\n    return {};\n  },\n  mounted() {\n    this.setBanner();\n    this.setComment();\n    this.setTeacher();\n  },\n  methods: {\n    setBanner() {\n      swipers.banner = new Swiper(\"#banner.swiper-container\", {\n        loop: true,\n        autoplay: {\n          delay: 3820,\n          disableOnInteraction: false\n        },\n        pagination: {\n          el: \".swiper-pagination\"\n        }\n      });\n    },\n    setComment() {\n      swipers.comment = new Swiper(\"#comment.swiper-container\", {\n        loop: true,\n        autoplay: {\n          delay: 3820,\n          disableOnInteraction: false\n        },\n        slidesPerView: 5,\n        spaceBetween: 30\n      });\n    },\n    setTeacher() {\n      swipers.teacher = new Swiper(\"#teacher.swiper-container\", {\n        loop: true,\n        autoplay: {\n          delay: 3820,\n          disableOnInteraction: false\n        },\n        slidesPerView: 5,\n        spaceBetween: 30\n      });\n    }\n  },\n  destroyed() {\n    swipers.banner.destroy();\n    swipers.comment.destroy();\n    swipers.teacher.destroy();\n  }\n};\n</script>\n\n<style lang=\"less\">\n.el-carousel__item h3 {\n  color: #475669;\n  font-size: 14px;\n  opacity: 0.75;\n  line-height: 150px;\n  margin: 0;\n}\n\n.el-carousel__item:nth-child(2n) {\n  background-color: #99a9bf;\n}\n\n.el-carousel__item:nth-child(2n + 1) {\n  background-color: #d3dce6;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/home/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"floor floor-1\"},[_c('div',{staticClass:\"container\"},[_vm._m(1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":15}},_vm._l((4),function(item){return _c('el-col',{key:item,attrs:{\"span\":6}},[_c('a',{staticClass:\"card shadow\"},[_c('img',{staticClass:\"card-media\",attrs:{\"src\":\"https://img3.mukewang.com/szimg/5b165c2b0001e24a05400300.jpg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"t-ellipsis\"},[_vm._v(\"注册消防工程师VIP火箭班注册消防工程师VIP火箭班\")]),_vm._v(\" \"),_c('div',[_vm._v(\"2932\")]),_vm._v(\" \"),_c('div',{staticClass:\"t-22 t-right t-orange\"},[_vm._v(\"￥6980\")])])])])}))],1)]),_vm._v(\" \"),_c('div',{staticClass:\"floor floor-2\"},[_c('div',{staticClass:\"container\"},[_vm._m(2),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":5}},[_c('div',{staticClass:\"floor-2-slide\"},[_c('a',[_c('div',{staticClass:\"mb-25\"},[_c('img',{attrs:{\"src\":\"https://img3.mukewang.com/583e9afa000166c410240770-100-100.jpg\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"mb-30\"},[_c('div',{staticClass:\"t-20 mb-10\"},[_vm._v(\"\\n                                    自考-学前教育专科\\n                                \")]),_vm._v(\" \"),_c('div',{staticClass:\"t-light\"},[_vm._v(\"\\n                                    经典取证班\\n                                \")])]),_vm._v(\" \"),_c('div',[_c('span',{staticClass:\"t-30\"},[_vm._v(\"￥4980\")])])])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":19}},[_c('el-row',{attrs:{\"gutter\":10}},_vm._l((8),function(item){return _c('el-col',{key:item,attrs:{\"span\":6}},[_c('a',{staticClass:\"card mb-20 shadow\"},[_c('img',{staticClass:\"card-media\",attrs:{\"src\":\"https://img3.mukewang.com/szimg/5b165c2b0001e24a05400300.jpg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"card-body mb-10\"},[_c('div',{staticClass:\"t-ellipsis mb-10\"},[_vm._v(\"注册消防工程师VIP火箭班注册消防工程师VIP火箭班\")]),_vm._v(\" \"),_c('div',{staticClass:\"clearfix\"},[_c('div',{staticClass:\"pull-left\"},[_vm._v(\"2932\")]),_vm._v(\" \"),_c('div',{staticClass:\"pull-right t-orange\"},[_vm._v(\"￥6980\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"clearfix\"})])])}))],1)],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"floor floor-3\"},[_c('div',{staticClass:\"container\"},[_vm._m(3),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"0 100px\"}},[_c('div',{staticClass:\"swiper-container\",attrs:{\"id\":\"comment\"}},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((20),function(item){return _c('div',{key:'comment'+item,staticClass:\"swiper-slide\"},[_vm._m(4,true)])}))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"floor floor-4\"},[_c('div',{staticClass:\"container\"},[_vm._m(5),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"swiper-container\",attrs:{\"id\":\"teacher\"}},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((20),function(item){return _c('div',{key:'comment'+item,staticClass:\"swiper-slide\"},[_vm._m(6,true)])}))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"floor floor-5\"},[_c('div',{staticClass:\"container\"},[_vm._m(7),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":30}},[_c('el-col',{attrs:{\"span\":8}},[_c('div',{staticClass:\"card shadow card-padd\"},[_c('div',{staticClass:\"card-title\"},[_c('span',{staticClass:\"t-18\"},[_vm._v(\"资讯标题一\")])]),_vm._v(\" \"),_c('div',{staticClass:\"card-media\"},[_c('img',{attrs:{\"src\":\"https://img3.mukewang.com/szimg/5b165c2b0001e24a05400300.jpg\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"t-12 t-gray\"},[_vm._v(\"硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。\")])]),_vm._v(\" \"),_c('div',{staticClass:\"card-more\"})])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":16}},[_c('div',{staticClass:\"news\"},[_c('div',{staticClass:\"news-list\"},_vm._l((4),function(item){return _c('a',{key:'news'+item,staticClass:\"news-item\"},[_c('div',{staticClass:\"news-title\"},[_vm._v(\"资讯标题一\")]),_vm._v(\" \"),_c('div',{staticClass:\"news-desc\"},[_vm._v(\"您好，这里是全国心理咨询师报名审核平台，2018年考试变革新政策已颁布，输入您的“学历+手机号码”，系统会自动审核并发送改革后的报考条件、报考时间和相关政策。\")]),_vm._v(\" \"),_c('div',{staticClass:\"news-more\"},[_vm._v(\"MORE\")])])}))])])],1)],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"banner\"},[_c('div',{staticClass:\"swiper-container\",staticStyle:{\"height\":\"460px\"},attrs:{\"id\":\"banner\"}},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide\"},[_c('img',{staticClass:\"img-r\",attrs:{\"src\":\"http://news.chaozhiedu.com/img/banner.png\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('img',{staticClass:\"img-r\",attrs:{\"src\":\"http://news.chaozhiedu.com/img/banner1.jpg\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide\"},[_c('img',{staticClass:\"img-r\",attrs:{\"src\":\"http://news.chaozhiedu.com/img/banner-xl.png\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"clearfix floor-hd mb-20\"},[_c('div',{staticClass:\"pull-left\"},[_c('span',{staticClass:\"t-20 t-orange\"},[_vm._v(\"畅销好课\")])]),_vm._v(\" \"),_c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"t-gray\"},[_vm._v(\"MORE\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"clearfix floor-hd mb-20\"},[_c('div',{staticClass:\"pull-left\"},[_c('span',{staticClass:\"t-20 t-purple\"},[_vm._v(\"学历教育\")])]),_vm._v(\" \"),_c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"t-gray\"},[_vm._v(\"MORE\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"clearfix floor-hd mb-20\"},[_c('span',{staticClass:\"t-20 t-green\"},[_vm._v(\"精彩评价\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"comment\"},[_c('div',{staticClass:\"comment-contant mb-20\"},[_c('div',{staticClass:\"comment-contant-text\"},[_c('span',[_vm._v(\"\\n                                            非常棒，课程非常适合新手使用，初级后再买高级的。\\n                                            非常棒，课程非常适合新手使用，初级后再买高级的。\\n                                            非常棒，课程非常适合新手使用，初级后再买高级的。\\n                                            非常棒，课程非常适合新手使用，初级后再买高级的。\\n                                            非常棒，课程非常适合新手使用，初级后再买高级的。\\n                                        \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"t-center\"},[_c('div',{staticClass:\"comment-avatar mb-10\"},[_c('img',{attrs:{\"src\":\"https://img3.mukewang.com/583e9afa000166c410240770-100-100.jpg\"}})]),_vm._v(\" \"),_c('div',[_vm._v(\"学员邪我\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"t-center floor-hd mb-20\"},[_c('span',{staticClass:\"floor-title-line\"}),_vm._v(\" \"),_c('span',{staticClass:\"t-24 t-black\"},[_vm._v(\"精 英 名 师\")]),_vm._v(\" \"),_c('span',{staticClass:\"floor-title-line\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\"},[_c('img',{staticClass:\"card-media\",attrs:{\"src\":\"https://img.mukewang.com/5a5d55de00015cba05120512.jpg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"t-ellipsis t-center\"},[_vm._v(\"欧雅老师\")]),_vm._v(\" \"),_c('div',{staticClass:\"t-12 t-gray\"},[_vm._v(\"硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。硕士研究生，国家二级心理咨询师，华北理工大学心理学院教师，华北理工大学附属医院心理科心理咨询师。\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"clearfix floor-hd mb-20\"},[_c('span',{staticClass:\"t-20 t-blue\"},[_vm._v(\"超职资讯\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-78726d17\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/home/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-78726d17\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-78726d17\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/home/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}